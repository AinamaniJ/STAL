{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/toolbar\";\nfunction LoginComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Required Email Adress\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Required Password\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass LoginComponent {\n  constructor() {\n    this.hide = false;\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n  ngOnInit() {\n    // Other initialization code\n  }\n  onLogin() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.value.email;\n      const password = this.loginForm.value.password;\n      // Implement your login logic here\n    }\n  }\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)();\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 32,\n  vars: 7,\n  consts: [[\"color\", \"primary\", 1, \"app-header\"], [\"href\", \"\", \"target\", \"_blank\", 1, \"positronx\"], [1, \"nav-tool-items\"], [\"mat-button\", \"\", \"mat-raised-button\", \"\", \"routerLink\", \"signup\", \"routerLinkActive\", \"active\"], [1, \"header\"], [\"name\", \"loginForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"email-input\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"formControlName\", \"email\", \"matInput\", \"\", \"required\", \"\"], [4, \"ngIf\"], [1, \"password-input\"], [\"formControlName\", \"password\", \"matInput\", \"\", \"required\", \"\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 1, \"blink\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"div\")(2, \"a\", 1);\n      i0.ɵɵtext(3, \"STAL Technologies\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"span\", 2)(5, \"a\", 3);\n      i0.ɵɵtext(6, \"Register\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"mat-card\")(8, \"mat-card-content\")(9, \"div\", 4)(10, \"h2\");\n      i0.ɵɵtext(11, \"Welcome Back! Please login to proceed\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_12_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(13, \"div\", 6)(14, \"mat-form-field\", 7)(15, \"mat-label\");\n      i0.ɵɵtext(16, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 8);\n      i0.ɵɵtemplate(18, LoginComponent_mat_error_18_Template, 2, 0, \"mat-error\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 10)(20, \"mat-form-field\", 7)(21, \"mat-label\");\n      i0.ɵɵtext(22, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 11);\n      i0.ɵɵelementStart(24, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_24_listener() {\n        return ctx.hide = !ctx.hide;\n      });\n      i0.ɵɵelementStart(25, \"mat-icon\");\n      i0.ɵɵtext(26);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(27, LoginComponent_mat_error_27_Template, 2, 0, \"mat-error\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"button\", 13);\n      i0.ɵɵtext(29, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"button\", 13);\n      i0.ɵɵtext(31, \"Forgot Password\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_6_0;\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", \"Hide Password\")(\"aria-pressed\", \"Hide\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_6_0.errors == null ? null : tmp_6_0.errors[\"required\"]);\n    }\n  },\n  dependencies: [i1.NgIf, i2.RouterLink, i2.RouterLinkActive, i3.MatAnchor, i3.MatButton, i3.MatIconButton, i4.MatCard, i4.MatCardContent, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.FormGroupDirective, i7.FormControlName, i8.MatIcon, i9.MatToolbar],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 805:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nSassError: Undefined variable.\\\\n   \\u2577\\\\n39 \\u2502 $primary-color: mat-palette($mat-blue);\\\\r\\\\n   \\u2502                             ^^^^^^^^^\\\\n   \\u2575\\\\n  src\\\\\\\\app\\\\\\\\login\\\\\\\\login.component.scss 39:29  root stylesheet\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[805]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n});\nexport { LoginComponent };","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","hide","loginForm","email","required","password","minLength","ngOnInit","onLogin","valid","value","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_12_listener","ɵɵelement","ɵɵtemplate","LoginComponent_mat_error_18_Template","LoginComponent_Template_button_click_24_listener","LoginComponent_mat_error_27_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","errors","ɵɵattribute","ɵɵtextInterpolate","tmp_6_0"],"sources":["C:\\Users\\Kimz\\Videos\\angular\\demo\\src\\app\\login\\login.component.ts","C:\\Users\\Kimz\\Videos\\angular\\demo\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  hide: boolean = false;\n  constructor() {\n    \n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n\n  ngOnInit() {\n    // Other initialization code\n  }\n\n  onLogin() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.value.email;\n      const password = this.loginForm.value.password;\n      // Implement your login logic here\n    }\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"app-header\">\n    <div><a href=\"\" target=\"_blank\" class=\"positronx\">STAL Technologies</a></div>\n    <span class=\"nav-tool-items\">\n\n      <a mat-button mat-raised-button routerLink=\"signup\" routerLinkActive=\"active\">Register</a>\n    </span>\n</mat-toolbar>\n<mat-card>\n    <mat-card-content>\n        <div class=\"header\">\n            <h2>Welcome Back! Please login to proceed</h2>\n        </div>\n        <form (ngSubmit)=\"onLogin()\" name=\"loginForm\" [formGroup]=\"loginForm\">\n            <div class=\"email-input\">\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input formControlName = \"email\" matInput required>\n                    <mat-error *ngIf=\"loginForm.get('email')?.errors?.['required']\">Required Email Adress</mat-error>\n                </mat-form-field>\n            </div>\n            \n            <div class=\"password-input\">\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input formControlName=\"password\" matInput [type]=\"hide ? 'password' : 'text'\" required >\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label] = \"'Hide Password'\" [attr.aria-pressed] = \"'Hide'\">\n                        <mat-icon>{{ hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n                    <mat-error *ngIf=\"loginForm.get('password')?.errors?.['required']\">Required Password</mat-error>\n                </mat-form-field>\n            </div>\n            <button mat-flat-button color=\"primary\" class=\"blink\">Login</button>\n            <button mat-flat-button color=\"primary\" class=\"blink\">Forgot Password</button>\n        </form>\n    </mat-card-content>\n</mat-card>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}