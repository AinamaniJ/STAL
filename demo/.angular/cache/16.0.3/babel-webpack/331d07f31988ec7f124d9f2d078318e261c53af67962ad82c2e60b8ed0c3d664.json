{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/toolbar\";\nclass CreatepasswordComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.minPw = 8;\n  }\n  ngOnInit() {\n    this.formGroup = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(this.minPw)]],\n      password2: ['', [Validators.required]]\n    }, {\n      validator: passwordMatchValidator\n    });\n  }\n  /* Shorthands for form controls (used from within template) */\n  get password() {\n    return this.formGroup.get('password');\n  }\n  get password2() {\n    return this.formGroup.get('password2');\n  }\n  /* Called on each input in either password field */\n  onPasswordInput() {\n    if (this.formGroup.hasError('passwordMismatch')) this.password2.setErrors([{\n      'passwordMismatch': true\n    }]);else this.password2.setErrors(null);\n  }\n}\nCreatepasswordComponent.ɵfac = function CreatepasswordComponent_Factory(t) {\n  return new (t || CreatepasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nCreatepasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreatepasswordComponent,\n  selectors: [[\"app-createpassword\"]],\n  decls: 7,\n  vars: 0,\n  consts: [[\"color\", \"primary\", 1, \"app-header\"], [\"href\", \"\", \"target\", \"_blank\", 1, \"positronx\"], [1, \"nav-tool-items\"], [\"mat-button\", \"\", \"mat-raised-button\", \"\", \"routerLink\", \"/login\", \"routerLinkActive\", \"active\"]],\n  template: function CreatepasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"div\")(2, \"a\", 1);\n      i0.ɵɵtext(3, \"STAL Technologies\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"span\", 2)(5, \"a\", 3);\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i2.RouterLink, i2.RouterLinkActive, i3.MatAnchor, i4.MatToolbar],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CreatepasswordComponent };\nexport const passwordMatchValidator = formGroup => {\n  if (formGroup.get('password').value === formGroup.get('password2').value) return null;else return {\n    passwordMismatch: true\n  };\n};","map":{"version":3,"names":["Validators","CreatepasswordComponent","constructor","formBuilder","minPw","ngOnInit","formGroup","group","password","required","minLength","password2","validator","passwordMatchValidator","get","onPasswordInput","hasError","setErrors","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","CreatepasswordComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","value","passwordMismatch"],"sources":["C:\\Users\\Kimz\\Videos\\angular\\demo\\src\\app\\createpassword\\createpassword.component.ts","C:\\Users\\Kimz\\Videos\\angular\\demo\\src\\app\\createpassword\\createpassword.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-createpassword',\n  templateUrl: './createpassword.component.html',\n  styleUrls: ['./createpassword.component.scss']\n})\nexport class CreatepasswordComponent implements OnInit {\n  minPw = 8;\n  formGroup: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.formGroup = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(this.minPw)]],\n      password2: ['', [Validators.required]]\n    }, {validator: passwordMatchValidator});\n  }\n\n  /* Shorthands for form controls (used from within template) */\n  get password() { return this.formGroup.get('password'); }\n  get password2() { return this.formGroup.get('password2'); }\n\n  /* Called on each input in either password field */\n  onPasswordInput() {\n    if (this.formGroup.hasError('passwordMismatch'))\n      this.password2.setErrors([{'passwordMismatch': true}]);\n    else\n      this.password2.setErrors(null);\n  }\n  \n}\nexport const passwordMatchValidator: ValidatorFn = (formGroup: FormGroup): ValidationErrors | null => {\n  if (formGroup.get('password').value === formGroup.get('password2').value)\n    return null;\n  else\n    return {passwordMismatch: true};\n};","<mat-toolbar color=\"primary\" class=\"app-header\">\n    <div><a href=\"\" target=\"_blank\" class=\"positronx\">STAL Technologies</a></div>\n    <span class=\"nav-tool-items\">\n        <a mat-button mat-raised-button routerLink=\"/login\" routerLinkActive=\"active\">Login</a>\n    </span>\n</mat-toolbar>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;AACnE,MAKaC,uBAAuB;EAIlCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,KAAK,GAAG,CAAC;EAGuC;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,SAAS,CAAC,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC;MACvEO,SAAS,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,CAAC;KACtC,EAAE;MAACG,SAAS,EAAEC;IAAsB,CAAC,CAAC;EACzC;EAEA;EACA,IAAIL,QAAQA,CAAA;IAAK,OAAO,IAAI,CAACF,SAAS,CAACQ,GAAG,CAAC,UAAU,CAAC;EAAE;EACxD,IAAIH,SAASA,CAAA;IAAK,OAAO,IAAI,CAACL,SAAS,CAACQ,GAAG,CAAC,WAAW,CAAC;EAAE;EAE1D;EACAC,eAAeA,CAAA;IACb,IAAI,IAAI,CAACT,SAAS,CAACU,QAAQ,CAAC,kBAAkB,CAAC,EAC7C,IAAI,CAACL,SAAS,CAACM,SAAS,CAAC,CAAC;MAAC,kBAAkB,EAAE;IAAI,CAAC,CAAC,CAAC,CAAC,KAEvD,IAAI,CAACN,SAAS,CAACM,SAAS,CAAC,IAAI,CAAC;EAClC;;AAvBWhB,uBAAuB,C;mBAAvBA,uBAAuB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAvBpB,uBAAuB,C;QAAvBA,uBAAuB;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCPpCV,EAAA,CAAAY,cAAA,qBAAgD;MACMZ,EAAA,CAAAa,MAAA,wBAAiB;MAAAb,EAAA,CAAAc,YAAA,EAAI;MACvEd,EAAA,CAAAY,cAAA,cAA6B;MACqDZ,EAAA,CAAAa,MAAA,YAAK;MAAAb,EAAA,CAAAc,YAAA,EAAI;;;;;;SDIlF/B,uBAAuB;AA0BpC,OAAO,MAAMY,sBAAsB,GAAiBP,SAAoB,IAA6B;EACnG,IAAIA,SAAS,CAACQ,GAAG,CAAC,UAAU,CAAC,CAACmB,KAAK,KAAK3B,SAAS,CAACQ,GAAG,CAAC,WAAW,CAAC,CAACmB,KAAK,EACtE,OAAO,IAAI,CAAC,KAEZ,OAAO;IAACC,gBAAgB,EAAE;EAAI,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}