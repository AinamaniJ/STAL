{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/toolbar\";\nfunction SignupComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Required Email Adress\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_mat_error_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Required Password\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass SignupComponent {\n  constructor() {\n    this.hide = false;\n    this.signUpForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n  ngOnInit() {\n    // Other initialization code\n  }\n  onSignup() {\n    if (this.signUpForm.valid) {\n      const email = this.signUpForm.value.email;\n      const password = this.signUpForm.value.password;\n      // Implement your login logic here\n    }\n  }\n}\n\nSignupComponent.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || SignupComponent)();\n};\nSignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupComponent,\n  selectors: [[\"app-signup\"]],\n  decls: 34,\n  vars: 7,\n  consts: [[1, \"btn\"], [\"mat-raised-button\", \"\", \"routerLink\", \"/login\", \"routerLinkActive\", \"active\"], [1, \"header\"], [\"name\", \"signUpForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"email-input\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"formControlName\", \"email\", \"matInput\", \"\", \"required\", \"\"], [4, \"ngIf\"], [1, \"password-input\"], [\"formControlName\", \"password\", \"matInput\", \"\", \"required\", \"\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 1, \"blink\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\")(1, \"mat-toolbar\")(2, \"p\")(3, \"span\");\n      i0.ɵɵtext(4, \"STL \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(5, \"Technologies\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 0)(7, \"button\", 1);\n      i0.ɵɵtext(8, \"Login\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(9, \"mat-card\")(10, \"mat-card-content\")(11, \"div\", 2)(12, \"h2\");\n      i0.ɵɵtext(13, \"[Please sign up with us\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_14_listener() {\n        return ctx.onSignup();\n      });\n      i0.ɵɵelementStart(15, \"div\", 4)(16, \"mat-form-field\", 5)(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 6);\n      i0.ɵɵtemplate(20, SignupComponent_mat_error_20_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 8)(22, \"mat-form-field\", 5)(23, \"mat-label\");\n      i0.ɵɵtext(24, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 9);\n      i0.ɵɵelementStart(26, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function SignupComponent_Template_button_click_26_listener() {\n        return ctx.hide = !ctx.hide;\n      });\n      i0.ɵɵelementStart(27, \"mat-icon\");\n      i0.ɵɵtext(28);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(29, SignupComponent_mat_error_29_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"button\", 11);\n      i0.ɵɵtext(31, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"button\", 11);\n      i0.ɵɵtext(33, \"Forgot Password\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_6_0;\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"formGroup\", ctx.signUpForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.signUpForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", \"Hide Password\")(\"aria-pressed\", \"Hide\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.signUpForm.get(\"password\")) == null ? null : tmp_6_0.errors == null ? null : tmp_6_0.errors[\"required\"]);\n    }\n  },\n  dependencies: [i1.NgIf, i2.RouterLink, i2.RouterLinkActive, i3.MatButton, i3.MatIconButton, i4.MatCard, i4.MatCardContent, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.FormGroupDirective, i7.FormControlName, i8.MatIcon, i9.MatToolbar],\n  styles: [\"mat-toolbar[_ngcontent-%COMP%] {\\n  background: #282a36;\\n}\\n\\nmat-card[_ngcontent-%COMP%] {\\n  background: #282a36;\\n  max-width: 600px;\\n  margin: 5em auto;\\n  text-align: center;\\n  max-height: 600px;\\n  padding-top: 50px;\\n  padding-bottom: 50px;\\n  border-radius: 1cm;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.full-width[_ngcontent-%COMP%] {\\n  width: 80%;\\n}\\n\\n.firstname-input[_ngcontent-%COMP%] {\\n  padding-top: 10px;\\n}\\n\\n.email-input[_ngcontent-%COMP%] {\\n  padding-top: 10px;\\n}\\n\\n.password-input[_ngcontent-%COMP%] {\\n  padding-top: 10px;\\n}\\n\\n.aLink[_ngcontent-%COMP%] {\\n  float: right;\\n  padding-right: 60px;\\n  text-decoration: none;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin-left: 50px;\\n}\\n\\nspan[_ngcontent-%COMP%] {\\n  font-family: Georgia, \\\"Times New Roman\\\", Times, serif;\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0FBQ0o7O0FBQ0E7RUFDSSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7RUFDQSxvQkFBQTtFQUNBLGtCQUFBO0FBRUo7O0FBQUE7RUFDSSxrQkFBQTtBQUdKOztBQURBO0VBQ0ksVUFBQTtBQUlKOztBQUZBO0VBQ0ksaUJBQUE7QUFLSjs7QUFIQTtFQUNJLGlCQUFBO0FBTUo7O0FBSkE7RUFDSSxpQkFBQTtBQU9KOztBQUxBO0VBQ0ksWUFBQTtFQUNBLG1CQUFBO0VBQ0EscUJBQUE7QUFRSjs7QUFMQTtFQUNJLGlCQUFBO0FBUUo7O0FBTkE7RUFDSSxxREFBQTtBQVNKOztBQVBBO0VBQ0ksWUFBQTtBQVVKIiwic291cmNlc0NvbnRlbnQiOlsibWF0LXRvb2xiYXJ7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMjgyYTM2O1xyXG59XHJcbm1hdC1jYXJke1xyXG4gICAgYmFja2dyb3VuZDogIzI4MmEzNjtcclxuICAgIG1heC13aWR0aDogNjAwcHg7XHJcbiAgICBtYXJnaW46IDVlbSBhdXRvO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWF4LWhlaWdodDogNjAwcHg7XHJcbiAgICBwYWRkaW5nLXRvcDogNTBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiA1MHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMWNtO1xyXG59XHJcbi5oZWFkZXJ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuLmZ1bGwtd2lkdGh7XHJcbiAgICB3aWR0aDogODAlO1xyXG59XHJcbi5maXJzdG5hbWUtaW5wdXR7XHJcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcclxufVxyXG4uZW1haWwtaW5wdXR7XHJcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcclxufVxyXG4ucGFzc3dvcmQtaW5wdXR7XHJcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcclxufVxyXG4uYUxpbmt7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA2MHB4O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgIFxyXG59XHJcbmJ1dHRvbntcclxuICAgIG1hcmdpbi1sZWZ0OiA1MHB4OyAgIFxyXG59XHJcbnNwYW57XHJcbiAgICBmb250LWZhbWlseTogR2VvcmdpYSwgJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxufVxyXG4uYnRue1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { SignupComponent };","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","SignupComponent","constructor","hide","signUpForm","email","required","password","minLength","ngOnInit","onSignup","valid","value","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵlistener","SignupComponent_Template_form_ngSubmit_14_listener","ɵɵelement","ɵɵtemplate","SignupComponent_mat_error_20_Template","SignupComponent_Template_button_click_26_listener","SignupComponent_mat_error_29_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","errors","ɵɵattribute","ɵɵtextInterpolate","tmp_6_0"],"sources":["C:\\Users\\Kimz\\Videos\\angular\\demo\\src\\app\\signup\\signup.component.ts","C:\\Users\\Kimz\\Videos\\angular\\demo\\src\\app\\signup\\signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent {\n  signUpForm: FormGroup;\n  hide: boolean = false;\n  constructor() {\n    \n    this.signUpForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n\n  ngOnInit() {\n    // Other initialization code\n  }\n\n  onSignup() {\n    if (this.signUpForm.valid) {\n      const email = this.signUpForm.value.email;\n      const password = this.signUpForm.value.password;\n      // Implement your login logic here\n    }\n  }\n}\n","<p>\n    <mat-toolbar>\n      <p><span>STL </span>Technologies</p>\n      <div class=\"btn\">\n        <button mat-raised-button routerLink=\"/login\" routerLinkActive=\"active\">Login</button>\n      </div>\n      \n    </mat-toolbar>\n  </p>\n  \n<mat-card>\n    <mat-card-content>\n        <div class=\"header\">\n            <h2>[Please sign up with us</h2>\n        </div>\n        <form (ngSubmit)=\"onSignup()\" name=\"signUpForm\" [formGroup]=\"signUpForm\">\n            <div class=\"email-input\">\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\n                    <mat-label>Email</mat-label>\n                    <input formControlName = \"email\" matInput required>\n                    <mat-error *ngIf=\"signUpForm.get('email')?.errors?.['required']\">Required Email Adress</mat-error>\n                </mat-form-field>\n            </div>\n            \n            <div class=\"password-input\">\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\n                    <mat-label>Password</mat-label>\n                    <input formControlName=\"password\" matInput [type]=\"hide ? 'password' : 'text'\" required >\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label] = \"'Hide Password'\" [attr.aria-pressed] = \"'Hide'\">\n                        <mat-icon>{{ hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n                    <mat-error *ngIf=\"signUpForm.get('password')?.errors?.['required']\">Required Password</mat-error>\n                </mat-form-field>\n            </div>\n            <button mat-flat-button color=\"primary\" class=\"blink\">Login</button>\n            <button mat-flat-button color=\"primary\" class=\"blink\">Forgot Password</button>\n        </form>\n    </mat-card-content>\n</mat-card>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}